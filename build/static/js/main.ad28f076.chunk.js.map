{"version":3,"sources":["services/phonebook.js","components/Filter.js","components/Form.js","components/Person.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","personUrl","delete","put","Filter","value","eventHandler","type","onChange","Form","props","onSubmit","handleSubmit","newName","handleNameInputChange","required","newNumber","handleNumberInputChange","Person","person","handleButtonClick","name","number","onClick","Notification","message","notificationStyle","color","note","error","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","persons","setPersons","setNewName","setNewNumber","newSearch","setNewSearch","notification","setNotification","notificationType","setNotificationType","removePerson","personToRemove","find","window","confirm","personsService","filter","setTimeout","personsToShow","toLowerCase","includes","useEffect","result","target","e","preventDefault","map","p","personToUpdate","newPersonObject","updatedPerson","catch","updatePersonNumber","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad28f076.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = `/api/persons`;\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\treturn request.then((response) => {\r\n\t\treturn response.data;\r\n\t});\r\n};\r\n\r\nconst create = (newObject) => {\r\n\tconst request = axios.post(baseUrl, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n\tconst personUrl = `${baseUrl}/${id}`;\r\n\taxios.delete(personUrl);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create, remove, update };\r\n","import React from 'react';\r\n\r\nconst Filter = ({ value, eventHandler }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tfilter shown with: <input type='text' value={value} onChange={eventHandler} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst Form = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\tname: <input type='text' value={props.newName} onChange={props.handleNameInputChange} required />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tnumber: <input type='tel' value={props.newNumber} onChange={props.handleNumberInputChange} required />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type='submit'>add</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst Person = ({ person, handleButtonClick }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>\r\n\t\t\t\t{person.name}: {person.number}\r\n\t\t\t</p>\r\n\t\t\t<button onClick={() => handleButtonClick(person.id)}>delete</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Person;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message, type }) => {\r\n    const colors = {note: '#22cc44', error: '#cc2244'};\r\n\tconst notificationStyle = {\r\n\t\tcolor: colors[type],\r\n\t\tbackground: '#ddd',\r\n\t\tfontSize: 20,\r\n\t\tborderStyle: 'solid',\r\n\t\tborderRadius: 5,\r\n\t\tpadding: 10,\r\n\t\tmarginBottom: 10\r\n\t};\r\n\r\n\tif (message === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn <div style={notificationStyle}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\nimport personsService from './services/phonebook';\nimport Filter from './components/Filter';\nimport Form from './components/Form';\nimport Person from './components/Person';\nimport Notification from './components/Notification';\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([]);\n\tconst [newName, setNewName] = useState('');\n\tconst [newNumber, setNewNumber] = useState('');\n\tconst [newSearch, setNewSearch] = useState('');\n\tconst [notification, setNotification] = useState(null);\n\tconst [notificationType, setNotificationType] = useState(null);\n\n\tconst removePerson = (id) => {\n\t\tconst personToRemove = persons.find((person) => person.id === id);\n\t\tconst confirmDelition = window.confirm(`Delete ${personToRemove.name}?`);\n\t\tif (confirmDelition) {\n\t\t\tpersonsService.remove(id);\n\t\t\tsetPersons(persons.filter((person) => person.id !== id));\n\t\t\tsetNotificationType('note');\n\t\t\tsetNotification(`Deleted ${personToRemove.name}`);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetNotification(null);\n\t\t\t}, 3000);\n\t\t}\n\t};\n\n\tconst updatePersonNumber = () => {\n\t\tconst confirmUpdate = window.confirm(\n\t\t\t`${newName} is already added to phonebook, replace the old number with new one?`\n\t\t);\n\t\tif (confirmUpdate) {\n\t\t\tconst personToUpdate = persons.find((person) => person.name === newName);\n\t\t\tconst newPersonObject = { ...personToUpdate, number: newNumber };\n\t\t\tpersonsService\n\t\t\t\t.update(personToUpdate.id, newPersonObject)\n\t\t\t\t.then((updatedPerson) => {\n\t\t\t\t\tsetPersons(\n\t\t\t\t\t\tpersons.map((person) => (person.id === personToUpdate.id ? updatedPerson : person))\n\t\t\t\t\t);\n\t\t\t\t\tsetNotificationType('note');\n\t\t\t\t\tsetNotification(`${updatedPerson.name} number updated`);\n\t\t\t\t\tsetTimeout(() => setNotification(null), 3000);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetNotification(`${personToUpdate.name} is already deleted`);\n\t\t\t\t\tsetNotificationType('error');\n\t\t\t\t\tsetPersons(persons.filter((person) => person.id !== personToUpdate.id));\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetNotification(null);\n\t\t\t\t\t}, 3000);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst createNewPerson = () => {\n\t\tconst nameObject = {\n\t\t\tname: newName,\n\t\t\tnumber: newNumber\n\t\t};\n\t\tpersonsService\n\t\t\t.create(nameObject)\n\t\t\t.then((response) => {\n\t\t\t\tsetPersons([...persons, response]);\n\t\t\t\tsetNotificationType('note');\n\t\t\t\tsetNotification(`Added ${response.name}`);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetNotification(null);\n\t\t\t\t}, 3000);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetNotification(err.response.data.error);\n\t\t\t\tsetNotificationType('error');\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetNotification(null);\n\t\t\t\t}, 3000);\n\t\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst isPersonExist = persons.map((p) => p.name).includes(newName);\n\t\tif (isPersonExist) {\n\t\t\tupdatePersonNumber();\n\t\t} else {\n\t\t\tcreateNewPerson();\n\t\t}\n\t\tsetNewName('');\n\t\tsetNewNumber('');\n\t};\n\n\tconst handleNameInputChange = ({ target }) => {\n\t\tsetNewName(target.value);\n\t};\n\n\tconst handleNumberInputChange = ({ target }) => {\n\t\tsetNewNumber(target.value);\n\t};\n\n\tconst handleSearchInputChange = ({ target }) => {\n\t\tsetNewSearch(target.value);\n\t};\n\n\tconst personsToShow = persons.filter((person) =>\n\t\tperson.name.toLowerCase().includes(newSearch.toLowerCase())\n\t);\n\n\tuseEffect(() => {\n\t\tpersonsService.getAll().then((result) => setPersons(result));\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Notification type={notificationType} message={notification} />\n\t\t\t<Filter value={newSearch} eventHandler={handleSearchInputChange} />\n\t\t\t<h2>add a new</h2>\n\t\t\t<Form\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\thandleNameInputChange={handleNameInputChange}\n\t\t\t\thandleNumberInputChange={handleNumberInputChange}\n\t\t\t\tnewName={newName}\n\t\t\t\tnewNumber={newNumber}\n\t\t\t/>\n\t\t\t<h2>Numbers</h2>\n\t\t\t{personsToShow.map((person) => (\n\t\t\t\t<Person handleButtonClick={removePerson} key={person.id} person={person} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}